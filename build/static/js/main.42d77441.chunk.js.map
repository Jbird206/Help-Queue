{"version":3,"sources":["components/Header.js","components/ReusableForm.js","components/NewTicketForm.js","components/Ticket.jsx","components/TicketList.jsx","components/TicketDetail.js","components/EditTicketForm.js","components/TicketControl.js","components/App.jsx","index.js"],"names":["Header","props","style","backgroundColor","fontFamily","padding","margin","width","marginLeft","marginRight","boxShadow","borderRadius","textAlign","border","borderWidth","borderColor","ReusableForm","Fragment","onSubmit","formSubmissionHandler","type","name","placeholder","buttonText","NewTicketForm","event","preventDefault","onNewTicketCreation","names","target","value","location","issue","id","v4","console","log","Ticket","onClick","whenTicketClicked","TicketList","ticketList","map","ticket","index","onTicketSelection","key","TicketDetail","onClickingDelete","onClickingEdit","EditNewTicket","onEditTicket","TicketControl","handleClick","state","selectedTicket","setState","formVisibleOnPage","editing","prevState","handleAddingNewTicketToList","newTicket","newMasterTicketList","masterTicketList","concat","handleChangingSelectedTicket","filter","handleDeletingTicket","handleEditClick","handleEditingTicketInList","ticketToEdit","editedMasterTicketList","bind","currentlyVisibleState","this","EditTicketForm","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.42d77441.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header(props) {\n  const myStyledComponentStyles = {\n    backgroundColor: '#42f5da',\n    fontFamily: 'sans-serif',\n    padding: '50px',\n    margin: '10px',\n    width: '300px',\n    marginLeft: 50,\n    marginRight: 50,\n    boxShadow: '5px 5px 15px',\n    borderRadius: 10,\n    textAlign: 'center',\n    border: '1px solid cyan',\nborderWidth: 2,\nborderColor: '#8585ad'\n    \n  }\n  return (\n    <div style={myStyledComponentStyles}>\n      <h1>Help Queue!</h1>\n     <p>Create a ticket so we can assist you.</p>\n    </div>\n    \n  );\n}\n\n\nexport default Header;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction ReusableForm(props) {\r\n    const myStyledComponentStyles = {\r\n        backgroundColor: '#f54284',\r\n        fontFamily: 'sans-serif',\r\n        padding: '50px',\r\n        margin: '50px',\r\n        marginLeft: 50,\r\n        marginRight: 50,\r\n        boxShadow: '5px 5px 15px',\r\n        borderRadius: 50,\r\n        textAlign: 'center',\r\n        border: '1px solid cyan',\r\n    borderWidth: 4,\r\n    borderColor: '#8585ad'\r\n    }\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <div style={myStyledComponentStyles}>\r\n      <form onSubmit={props.formSubmissionHandler}>\r\n          <h1>Fill out the form below</h1>\r\n          <hr></hr><br></br>\r\n        <input\r\n          type='text'\r\n          name='names'\r\n          placeholder='Pair Names' />\r\n        <input\r\n          type='text'\r\n          name='location'\r\n          placeholder='Location' />\r\n          <br></br>\r\n          <input\r\n          type='date'\r\n          name='date and time'\r\n          placeholder='0000' />\r\n          <br></br>\r\n        <textarea\r\n          type='text'\r\n          name='issue'\r\n          placeholder='Describe your issue.' />\r\n          <br></br>\r\n        <button type='submit'>{props.buttonText}</button>\r\n      </form></div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nReusableForm.propTypes = {\r\n  formSubmissionHandler: PropTypes.func,\r\n  buttonText: PropTypes.string\r\n};\r\n\r\nexport default ReusableForm;","import React from \"react\";\nimport { v4 } from \"uuid\";\nimport PropTypes from \"prop-types\";\nimport ReusableForm from \"./ReusableForm\";\n\nfunction NewTicketForm(props) {\n  function handleNewTicketFormSubmission(event) {\n    event.preventDefault();\n\n    props.onNewTicketCreation({\n      names: event.target.names.value,\n      location: event.target.location.value,\n      issue: event.target.issue.value,\n      id: v4(),\n    });\n    console.log(event.target.names.value);\n    console.log(event.target.location.value);\n    console.log(event.target.issue.value);\n  }\n\n  return (\n    <React.Fragment>\n      <ReusableForm\n        formSubmissionHandler={handleNewTicketFormSubmission}\n        buttonText=\"Help!\"\n      />\n    </React.Fragment>\n  );\n}\n\nNewTicketForm.propTypes = {\n  onNewTicketCreation: PropTypes.func,\n};\n\nexport default NewTicketForm;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Ticket(props) {\n  const myStyledComponentStyles = {\n    backgroundColor: '#ff5c33',\n    fontFamily: 'sans-serif',\n    padding: '50px',\n    margin: '50px',\n    marginLeft: 50,\n    marginRight: 50,\n    boxShadow: '5px 5px 15px',\n    borderRadius: 50,\n    textAlign: 'center',\n    border: '1px solid cyan',\nborderWidth: 2,\nborderColor: 'cyan'\n  }\n  return (\n\n    <React.Fragment>\n      <div style={myStyledComponentStyles}>\n      <div onClick={() => props.whenTicketClicked(props.id)}>\n      <h3>\n        {props.location} - {props.names}\n      </h3>\n      <p>\n        <em>{props.issue}</em>\n      </p>\n      <hr /></div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nTicket.propTypes = {\n  names: PropTypes.string,\n  location: PropTypes.string,\n  issue: PropTypes.string,\n};\n\nexport default Ticket;\n","import React from \"react\";\nimport Ticket from \"./Ticket\";\nimport PropTypes from \"prop-types\";\n\n// remove const masterTicketList = [ ... ]. We no longer want these.\n\n\n\nfunction TicketList(props) { \n  const myStyledComponentStyles = {\n    backgroundColor: '#b3ecff',\n    fontFamily: 'sans-serif',\n    padding: '50px',\n    margin: '50px',\n    marginLeft: 50,\n    marginRight: 50,\n    boxShadow: '5px 5px 15px',\n    borderRadius: 50,\n    textAlign: 'center',\n    border: '1px solid cyan',\nborderWidth: 2,\nborderColor: '#8585ad'\n    \n  }\n  return (\n    \n    <React.Fragment>\n      <div style={myStyledComponentStyles}>\n      <hr />\n      {props.ticketList.map((ticket, index) => // Loop through the list passed down from TicketControl.\n        <Ticket \n        whenTicketClicked={props.onTicketSelection}\n        names={ticket.names}\n          location={ticket.location}\n          issue={ticket.issue}\n          id={ticket.id}\n          key={index} />\n      )}</div>\n    </React.Fragment>\n  );\n}\n\n// Add propTypes for ticketList.\nTicketList.propTypes = {\n  ticketList: PropTypes.array,\n  onTicketSelection: PropTypes.func,\n};\n\nexport default TicketList;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction TicketDetail(props) {\r\n  const myStyledComponentStyles = {\r\n    backgroundColor: '#f59b42',\r\n    fontFamily: 'sans-serif',\r\n    padding: '50px',\r\n    margin: '50px',\r\n    marginLeft: 50,\r\n    marginRight: 50,\r\n    boxShadow: '5px 5px 15px',\r\n    borderRadius: 50,\r\n    textAlign: 'center',\r\n    border: '1px solid cyan',\r\nborderWidth: 2,\r\nborderColor: '#8585ad'\r\n    \r\n  }\r\n  const { ticket, onClickingDelete } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div style={myStyledComponentStyles}>\r\n        <hr></hr>\r\n      <h1>Ticket Detail</h1>\r\n      <h3>\r\n        {ticket.location} - {ticket.names}\r\n      </h3>\r\n      <p>\r\n        <em>{ticket.issue}</em>\r\n      </p>\r\n      <button onClick={props.onClickingEdit}>Update Ticket</button>\r\n      <button onClick={() => onClickingDelete(ticket.id)}>Close Ticket</button>\r\n      <hr />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nTicketDetail.propTypes = {\r\n  ticket: PropTypes.object,\r\n  onClickingEdit: PropTypes.func,\r\n  onClickingDelete: PropTypes.func,\r\n};\r\n\r\nexport default TicketDetail;","import React from \"react\";\r\nimport ReusableForm from \"./ReusableForm\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// function EditTicketForm(props) {\r\n//   return (\r\n//     <React.Fragment>\r\n//       <ReusableForm buttonText=\"Update Ticket\" />\r\n//     </React.Fragment>\r\n//   );\r\n// }\r\n\r\nfunction EditNewTicket(props) {\r\n  const { ticket } = props;\r\n\r\n  function handleEditTicketFormSubmission(event) {\r\n    event.preventDefault();\r\n    props.onEditTicket({\r\n      names: event.target.names.value,\r\n      location: event.target.location.value,\r\n      issue: event.target.issue.value,\r\n      id: ticket.id,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ReusableForm\r\n        formSubmissionHandler={handleEditTicketFormSubmission} /* new code */\r\n        buttonText=\"Update Ticket\"\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nEditNewTicket.propTypes = {\r\n  onEditTicket: PropTypes.func,\r\n};\r\n\r\n// export default EditTicketForm;\r\nexport default EditNewTicket;","import React from \"react\";\nimport NewTicketForm from \"./NewTicketForm\";\nimport TicketList from \"./TicketList\";\nimport TicketDetail from \"./TicketDetail\";\nimport EditTicketForm from \"./EditTicketForm\";\n\nclass TicketControl extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formVisibleOnPage: false,\n      masterTicketList: [],\n      selectedTicket: null,\n      editing: false,\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n  handleClick = () => {\n    if (this.state.selectedTicket != null) {\n      this.setState({\n        formVisibleOnPage: false,\n        selectedTicket: null,\n        editing: false,\n      });\n    } else {\n      this.setState((prevState) => ({\n        formVisibleOnPage: !prevState.formVisibleOnPage,\n      }));\n    }\n  };\n\n  handleAddingNewTicketToList = (newTicket) => {\n    const newMasterTicketList = this.state.masterTicketList.concat(newTicket);\n    this.setState({\n      masterTicketList: newMasterTicketList,\n      formVisibleOnPage: false,\n    });\n  };\n\n  handleChangingSelectedTicket = (id) => {\n    const selectedTicket = this.state.masterTicketList.filter(\n      (ticket) => ticket.id === id\n    )[0];\n    this.setState({ selectedTicket: selectedTicket });\n  };\n\n  handleDeletingTicket = (id) => {\n    const newMasterTicketList = this.state.masterTicketList.filter(\n      (ticket) => ticket.id !== id\n    );\n    this.setState({\n      masterTicketList: newMasterTicketList,\n      selectedTicket: null,\n    });\n  };\n\n  handleEditClick = () => {\n    console.log(\"handleEditClick reached!\");\n    this.setState({ editing: true });\n  };\n\n  handleEditingTicketInList = (ticketToEdit) => {\n    const editedMasterTicketList = this.state.masterTicketList\n      .filter((ticket) => ticket.id !== this.state.selectedTicket.id)\n      .concat(ticketToEdit);\n    this.setState({\n      masterTicketList: editedMasterTicketList,\n      editing: false,\n      selectedTicket: null,\n    });\n  };\n\n  render() {\n    let currentlyVisibleState = null;\n    let buttonText = null;\n\n    if (this.state.editing) {\n      currentlyVisibleState = (\n        <EditTicketForm\n          ticket={this.state.selectedTicket}\n          onEditTicket={this.handleEditingTicketInList}\n        />\n      );\n      buttonText = \"Return to Ticket List\";\n    } else if (this.state.selectedTicket != null) {\n      currentlyVisibleState = (\n        <TicketDetail\n          ticket={this.state.selectedTicket}\n          onClickingDelete={this.handleDeletingTicket}\n          onClickingEdit={this.handleEditClick}\n        />\n      );\n      buttonText = \"Return to Ticket List\";\n      // While our TicketDetail component only takes placeholder data, we will eventually be passing the value of selectedTicket as a prop.\n    } else if (this.state.formVisibleOnPage) {\n      // This conditional needs to be updated to \"else if.\"\n      currentlyVisibleState = (\n        <NewTicketForm onNewTicketCreation={this.handleAddingNewTicketToList} />\n      );\n      buttonText = \"Return to Ticket List\";\n    } else {\n      currentlyVisibleState = (\n        <TicketList\n          ticketList={this.state.masterTicketList}\n          onTicketSelection={this.handleChangingSelectedTicket}\n        />\n      );\n      // Because a user will actually be clicking on the ticket in the Ticket component, we will need to pass our new handleChangingSelectedTicket method as a prop.\n      buttonText = \"Add Ticket\";\n    }\n    return (\n      <React.Fragment>\n        {currentlyVisibleState}\n        <button onClick={this.handleClick}>{buttonText}</button>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default TicketControl;\n\n","import React from \"react\";\nimport Header from \"./Header\";\nimport TicketControl from \"./TicketControl\";\n\nfunction App(){\n  return (\n    <React.Fragment>\n      <Header />\n     {/* <TicketList /> */}\n     <TicketControl />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import './index.css';\n// import App from './App';\n// import * as serviceWorker from '../serviceWorker';\nimport App from \"./components/App\";\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}